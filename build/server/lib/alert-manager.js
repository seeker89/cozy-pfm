// Generated by CoffeeScript 1.6.2
var AlertManager, BankAccount, BankAlert, BankOperation, NotificationsHelper, appData, async, moment;

async = require('async');

moment = require('moment');

BankAccount = require('../models/bankaccount');

BankAlert = require('../models/bankalert');

BankOperation = require('../models/bankoperation');

NotificationsHelper = require('cozy-notifications-helper');

appData = require('../../package.json');

AlertManager = (function() {
  AlertManager.FORMATTER = "DD/MM/YYYY";

  function AlertManager() {
    this.notificator = new NotificationsHelper(appData.name);
  }

  AlertManager.prototype.checkAlertsForOperations = function(operations, callback) {
    var process,
      _this = this;

    process = function(operation, callback) {
      return BankAlert.allByAccountAndType(operation.bankAccount, "transaction", function(err, alerts) {
        var alert, params, text, treshold, _i, _len;

        for (_i = 0, _len = alerts.length; _i < _len; _i++) {
          alert = alerts[_i];
          if (alert.testTransaction(operation)) {
            if (alert.order === "lt") {
              treshold = "inférieur";
            } else {
              treshold = "supérieur";
            }
            text = "Alerte : transaction d'un montant " + ("" + treshold + " à " + alert.limit + "€");
            params = {
              text: "" + text + " (" + operation.amount + "€)"
            };
            _this.notificator.createTemporary(params);
          }
        }
        return callback();
      });
    };
    return async.each(operations, process, callback);
  };

  AlertManager.prototype.checkAlertsForAccounts = function(callback) {
    var _this = this;

    return BankAccount.all(function(err, accounts) {
      var process;

      process = function(account, callback) {
        return BankAlert.allByAccountAndType(account.id, "balance", function(err, alerts) {
          var alert, date, params, text, treshold, _i, _len;

          for (_i = 0, _len = alerts.length; _i < _len; _i++) {
            alert = alerts[_i];
            if (alert.testBalance(account)) {
              date = moment(account.lastChecked);
              date = date.format(AlertManager.FORMATTER);
              if (alert.order === "lt") {
                treshold = "sous le seuil de";
              } else {
                treshold = "au dessus du seuil de";
              }
              text = ("Alerte : " + account.title + " " + treshold + " ") + ("" + alert.limit + "€ (" + (account.getBalance()) + "€)");
              params = {
                text: "" + text
              };
              _this.notificator.createTemporary(params);
            }
          }
          return callback();
        });
      };
      return async.each(accounts, process, function(err) {
        return callback(err);
      });
    });
  };

  return AlertManager;

})();

module.exports = new AlertManager();
