// Generated by CoffeeScript 1.6.2
var Bank, BankAccess, BankAccount, BankOperation;

Bank = require('../models/bank');

BankAccess = require('../models/bankaccess');

BankAccount = require('../models/bankaccount');

BankOperation = require('../models/bankoperation');

module.exports.loadBank = function(req, res, next, bankID) {
  var _this = this;

  return Bank.find(bankID, function(err, bank) {
    if ((err != null) || (bank == null)) {
      return res.send(404, {
        error: "Bank not found"
      });
    } else {
      req.bank = bank;
      return next();
    }
  });
};

module.exports.index = function(req, res) {
  var doRespond;

  doRespond = function(err, banks) {
    var msg;

    if ((err != null) || (banks == null)) {
      msg = "Couldn't retrieve banks -- " + err;
      return res.send(500, msg);
    } else {
      return res.send(200, banks);
    }
  };
  if (req.query.withAccountOnly != null) {
    return Bank.getBanksWithAccounts(doRespond);
  } else {
    return Bank.all(doRespond);
  }
};

module.exports.show = function(req, res) {
  return res.send(200, req.bank);
};

module.exports.getAccesses = function(req, res) {
  return BankAccess.allFromBank(req.bank, function(err, accesses) {
    if (err != null) {
      return res.send(500, {
        error: 'Server error occurred while retrieving data'
      });
    } else {
      return res.send(200, accesses);
    }
  });
};

module.exports.getAccounts = function(req, res) {
  return BankAccount.allFromBank(req.bank, function(err, accounts) {
    if (err != null) {
      return res.send(500, {
        error: 'Server error occurred while retrieving data'
      });
    } else {
      return res.send(200, accounts);
    }
  });
};

module.exports.destroy = function(req, res) {
  return req.bank.destroyBankAccess(function(err) {
    var msg;

    if (err != null) {
      msg = "Could not delete accesses for bank " + bank.name;
      return res.send(500, {
        error: msg
      });
    } else {
      return res.send(204, {
        success: true
      });
    }
  });
};
